
Question:

The following code computes the [integer] square root of a number.  If the number is not a perfect square (this is no integer square root), then it returns -1.  It does this by successfully guessing.  If n is 100, it first guesses 50.  Too high?  Try something lower - halfway between 1 and 50.  What is its runtime?

int sqrt(int n) {
    return sqrt_helper(n,1,n);
}

int sqr_helper(int n, int min, int max) {
    if(max < min) return -1;

    int guess = (min + max) / 2;

    if( guess * guess == n ) {
        return guess;
    } else if( guess * guess < n) {
        return sqrt_helper(n, guess + 1, max);
    } else {
        return sqrt_helper(n, min, guess - 1)
    }
}

Answer:

O(log(n))
